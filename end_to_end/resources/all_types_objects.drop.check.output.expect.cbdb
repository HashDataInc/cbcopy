\dn schema*
List of schemas
 Name | Owner 
------+-------
(0 rows)

select * from t1 order by c1; select * from schema1.t1 order by c1; select * from schema2.t1 order by c1;
psql:resources/all_types_objects.check.sql:2: ERROR:  relation "t1" does not exist
LINE 1: select * from t1 order by c1;
                      ^
psql:resources/all_types_objects.check.sql:2: ERROR:  relation "schema1.t1" does not exist
LINE 1: select * from schema1.t1 order by c1;
                      ^
psql:resources/all_types_objects.check.sql:2: ERROR:  relation "schema2.t1" does not exist
LINE 1: select * from schema2.t1 order by c1;
                      ^
--\dE ext_expenses;
select relname, urilocation from pg_exttable join pg_class on pg_exttable.reloid=pg_class.oid and pg_class.relname='ext_expenses';
 relname | urilocation 
---------+-------------
(0 rows)

\dE ft1
psql:resources/all_types_objects.check.sql:5: error: Did not find any relation named "ft1".
\des sc
       List of foreign servers
 Name | Owner | Foreign-data wrapper 
------+-------+----------------------
(0 rows)

\deu+
      List of user mappings
 Server | User name | FDW options 
--------+-----------+-------------
(0 rows)

\db mytblspace
   List of tablespaces
 Name | Owner | Location 
------+-------+----------
(0 rows)

\df add
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

\df insert_data
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

select count(*) from pg_extprotocol where ptcname='p1';
 count 
-------
     0
(1 row)

\dx hstore
     List of installed extensions
 Name | Version | Schema | Description 
------+---------+--------+-------------
(0 rows)

\dO collation_french
                     List of collations
 Schema | Name | Collate | Ctype | Provider | Deterministic? 
--------+------+---------+-------+----------+----------------
(0 rows)

\dT type_mood
     List of data types
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dL plperlabc
          List of languages
 Name | Owner | Trusted | Description 
------+-------+---------+-------------
(0 rows)

select trffromsql, trftosql from pg_transform order by trffromsql, trftosql;
 trffromsql | trftosql 
------------+----------
(0 rows)

\dF testconfiguration
List of text search configurations
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dFd testdictionary
List of text search dictionaries
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dFp testparser
 List of text search parsers
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dFt testtemplate
List of text search templates
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dAc gist integer;
                  List of operator classes
 AM | Input type | Storage type | Operator class | Default? 
----+------------+--------------+----------------+----------
(0 rows)

\dAf gist integer
        List of operator families
 AM | Operator family | Applicable types 
----+-----------------+------------------
(0 rows)

\dAo gist testclass
        List of operators of operator families
 AM | Operator family | Operator | Strategy | Purpose 
----+-----------------+----------+----------+---------
(0 rows)

\dAp gist testclass
                     List of support functions of operator families
 AM | Operator family | Registered left type | Registered right type | Number | Function 
----+-----------------+----------------------+-----------------------+--------+----------
(0 rows)

select count(*) from pg_opfamily where opfname='testfam';
 count 
-------
     0
(1 row)

\da agg_twocols;
                     List of aggregate functions
 Schema | Name | Result data type | Argument data types | Description 
--------+------+------------------+---------------------+-------------
(0 rows)

select count(*) from pg_cast where castsource=(select oid from pg_type where typname='text') and casttarget=(select oid from pg_type where typname='int4');
 count 
-------
     0
(1 row)

--\dA test_access_method
select count(*) from pg_am where amname='test_access_method';
 count 
-------
     0
(1 row)

\dv v_vista
psql:resources/all_types_objects.check.sql:30: error: Did not find any relation named "v_vista".
\dm v_comedies
psql:resources/all_types_objects.check.sql:31: error: Did not find any relation named "v_comedies".
\ds myseq
psql:resources/all_types_objects.check.sql:32: error: Did not find any relation named "myseq".
--\dS tbl_with_constraint
select count(*) from tbl_with_constraint;
psql:resources/all_types_objects.check.sql:34: ERROR:  relation "tbl_with_constraint" does not exist
LINE 1: select count(*) from tbl_with_constraint;
                             ^
\dD us_postal_code_domain
                        List of domains
 Schema | Name | Type | Collation | Nullable | Default | Check 
--------+------+------+-----------+----------+---------+-------
(0 rows)

\dc testconv
               List of conversions
 Schema | Name | Source | Destination | Default? 
--------+------+--------+-------------+----------
(0 rows)

--\dS books
select count(*) from books;
psql:resources/all_types_objects.check.sql:38: ERROR:  relation "books" does not exist
LINE 1: select count(*) from books;
                             ^
select count(*) from pg_rules where rulename='rule_abc';
 count 
-------
     0
(1 row)

select count(*) from pg_trigger where tgname='testtable_trigger';
 count 
-------
     0
(1 row)

\dy postdata_eventtrigger
              List of event triggers
 Name | Event | Owner | Enabled | Function | Tags 
------+-------+-------+---------+----------+------
(0 rows)

\dg jonathan
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------

\dg group1
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------

\dg user1
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------

select count(*) from pg_policy where polname='account_policy';
 count 
-------
     0
(1 row)

select count(*) from pg_resgroup where rsgname='rgroup1';
 count 
-------
     0
(1 row)

select count(*) from pg_resqueue where rsqname='myqueue';
 count 
-------
     0
(1 row)

--\dX s1
select count(*) from pg_statistic_ext where stxname='s1';
 count 
-------
     0
(1 row)

