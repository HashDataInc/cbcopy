\dn schema*
  List of schemas
  Name   |  Owner  
---------+---------
 schema1 | gpadmin
 schema2 | gpadmin
(2 rows)

select * from t1 order by c1; select * from schema1.t1 order by c1; select * from schema2.t1 order by c1;
 c1 |   c2   
----+--------
  1 | public
  2 | public
  3 | public
(3 rows)

 c1 |   c2    
----+---------
  1 | schema1
  2 | schema1
  3 | schema1
(3 rows)

 c1 |   c2    
----+---------
  1 | schema2
  2 | schema2
  3 | schema2
(3 rows)

--\dE ext_expenses;
select relname, urilocation from pg_exttable join pg_class on pg_exttable.reloid=pg_class.oid and pg_class.relname='ext_expenses';
psql:resources/all_types_objects.check.sql:4: ERROR:  column "urilocation" does not exist
LINE 1: select relname, urilocation from pg_exttable join pg_class o...
                        ^
\dE ft1
psql:resources/all_types_objects.check.sql:5: error: Did not find any relation named "ft1".
\des sc
psql:resources/all_types_objects.check.sql:6: error: The server (version 8.2) does not support foreign servers.
\deu+
psql:resources/all_types_objects.check.sql:7: error: The server (version 8.2) does not support user mappings.
\db mytblspace
   List of tablespaces
 Name | Owner | Location 
------+-------+----------
(0 rows)

\df add
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
 public | add  | integer          | integer, integer    | func
(1 row)

\df insert_data
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

select count(*) from pg_extprotocol where ptcname='p1';
 count 
-------
     1
(1 row)

\dx hstore
psql:resources/all_types_objects.check.sql:12: error: The server (version 8.2) does not support extensions.
\dO collation_french
psql:resources/all_types_objects.check.sql:13: error: The server (version 8.2) does not support collations.
\dT type_mood
     List of data types
 Schema | Name | Description 
--------+------+-------------
(0 rows)

\dL plperlabc
      List of languages
 Name | Trusted | Description 
------+---------+-------------
(0 rows)

select trffromsql, trftosql from pg_transform order by trffromsql, trftosql;
psql:resources/all_types_objects.check.sql:16: ERROR:  relation "pg_transform" does not exist
LINE 1: select trffromsql, trftosql from pg_transform order by trffr...
                                         ^
\dF testconfiguration
psql:resources/all_types_objects.check.sql:17: error: The server (version 8.2) does not support full text search.
\dFd testdictionary
psql:resources/all_types_objects.check.sql:18: error: The server (version 8.2) does not support full text search.
\dFp testparser
psql:resources/all_types_objects.check.sql:19: error: The server (version 8.2) does not support full text search.
\dFt testtemplate
psql:resources/all_types_objects.check.sql:20: error: The server (version 8.2) does not support full text search.
\dAc gist integer;
psql:resources/all_types_objects.check.sql:21: ERROR:  column c.opcmethod does not exist
LINE 19:   LEFT JOIN pg_catalog.pg_am am on am.oid = c.opcmethod
                                                     ^
\dAf gist integer
psql:resources/all_types_objects.check.sql:22: ERROR:  relation "pg_catalog.pg_opfamily" does not exist
LINE 12: FROM pg_catalog.pg_opfamily f
              ^
\dAo gist testclass
psql:resources/all_types_objects.check.sql:23: ERROR:  relation "pg_catalog.pg_opfamily" does not exist
LINE 15:   LEFT JOIN pg_catalog.pg_opfamily of ON of.oid = o.amopfami...
                     ^
\dAp gist testclass
psql:resources/all_types_objects.check.sql:24: ERROR:  relation "pg_catalog.pg_opfamily" does not exist
LINE 13:   LEFT JOIN pg_catalog.pg_opfamily of ON of.oid = ap.amprocf...
                     ^
select count(*) from pg_opfamily where opfname='testfam';
psql:resources/all_types_objects.check.sql:25: ERROR:  relation "pg_opfamily" does not exist
LINE 1: select count(*) from pg_opfamily where opfname='testfam';
                             ^
\da agg_twocols;
                         List of aggregate functions
 Schema |    Name     | Result data type | Argument data types | Description 
--------+-------------+------------------+---------------------+-------------
 public | agg_twocols | numeric          | numeric, numeric    | 
(1 row)

select count(*) from pg_cast where castsource=(select oid from pg_type where typname='text') and casttarget=(select oid from pg_type where typname='int4');
 count 
-------
     1
(1 row)

--\dA test_access_method
select count(*) from pg_am where amname='test_access_method';
 count 
-------
     0
(1 row)

\dv v_vista
         List of relations
 Schema |  Name   | Type |  Owner  
--------+---------+------+---------
 public | v_vista | view | gpadmin
(1 row)

\dm v_comedies
psql:resources/all_types_objects.check.sql:31: error: Did not find any relation named "v_comedies".
\ds myseq
          List of relations
 Schema | Name  |   Type   |  Owner  
--------+-------+----------+---------
 public | myseq | sequence | gpadmin
(1 row)

--\dS tbl_with_constraint
select count(*) from tbl_with_constraint;
 count 
-------
     0
(1 row)

\dD us_postal_code_domain
                                                      List of domains
 Schema |         Name          | Type | Nullable | Default |                             Check                             
--------+-----------------------+------+----------+---------+---------------------------------------------------------------
 public | us_postal_code_domain | text |          |         | CHECK (VALUE ~ '^d{5}$'::text OR VALUE ~ '^d{5}-d{4}$'::text)
(1 row)

\dc testconv
                  List of conversions
 Schema |   Name   | Source |  Destination  | Default? 
--------+----------+--------+---------------+----------
 public | testconv | LATIN1 | MULE_INTERNAL | no
(1 row)

--\dS books
select count(*) from books;
 count 
-------
     0
(1 row)

select count(*) from pg_rules where rulename='rule_abc';
 count 
-------
     1
(1 row)

select count(*) from pg_trigger where tgname='testtable_trigger';
 count 
-------
     0
(1 row)

\dy postdata_eventtrigger
psql:resources/all_types_objects.check.sql:41: ERROR:  relation "pg_catalog.pg_event_trigger" does not exist
LINE 4: FROM pg_catalog.pg_event_trigger e WHERE evtname OPERATOR(pg...
             ^
\dg jonathan
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------
 jonathan  |            | 

\dg group1
            List of roles
 Role name |  Attributes  | Member of 
-----------+--------------+-----------
 group1    | Cannot login | 

\dg user1
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------
 user1     |            | 

select count(*) from pg_policy where polname='account_policy';
psql:resources/all_types_objects.check.sql:45: ERROR:  relation "pg_policy" does not exist
LINE 1: select count(*) from pg_policy where polname='account_policy...
                             ^
select count(*) from pg_resgroup where rsgname='rgroup1';
psql:resources/all_types_objects.check.sql:46: ERROR:  relation "pg_resgroup" does not exist
LINE 1: select count(*) from pg_resgroup where rsgname='rgroup1';
                             ^
select count(*) from pg_resqueue where rsqname='myqueue';
 count 
-------
     1
(1 row)

--\dX s1
select count(*) from pg_statistic_ext where stxname='s1';
psql:resources/all_types_objects.check.sql:49: ERROR:  relation "pg_statistic_ext" does not exist
LINE 1: select count(*) from pg_statistic_ext where stxname='s1';
                             ^
