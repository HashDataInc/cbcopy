\dn schema*
  List of schemas
  Name   |  Owner  
---------+---------
 schema1 | gpadmin
 schema2 | gpadmin
(2 rows)

select * from t1 order by c1; select * from schema1.t1 order by c1; select * from schema2.t1 order by c1;
 c1 |   c2   
----+--------
  1 | public
  2 | public
  3 | public
(3 rows)

 c1 |   c2    
----+---------
  1 | schema1
  2 | schema1
  3 | schema1
(3 rows)

 c1 |   c2    
----+---------
  1 | schema2
  2 | schema2
  3 | schema2
(3 rows)

--\dE ext_expenses;
select relname, urilocation from pg_exttable join pg_class on pg_exttable.reloid=pg_class.oid and pg_class.relname='ext_expenses';
   relname    |                   urilocation                   
--------------+-------------------------------------------------
 ext_expenses | {file://seghost1/dbfast/external/expenses1.csv}
(1 row)

\dE ft1
psql:resources/all_types_objects.check.sql:5: error: Did not find any relation named "ft1".
\des sc
       List of foreign servers
 Name | Owner | Foreign-data wrapper 
------+-------+----------------------
(0 rows)

\deu+
      List of user mappings
 Server | User name | FDW options 
--------+-----------+-------------
(0 rows)

\db mytblspace
   List of tablespaces
 Name | Owner | Location 
------+-------+----------
(0 rows)

\df add
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
 public | add  | integer          | integer, integer    | func
(1 row)

\df insert_data
                       List of functions
 Schema | Name | Result data type | Argument data types | Type 
--------+------+------------------+---------------------+------
(0 rows)

select count(*) from pg_extprotocol where ptcname='p1';
 count 
-------
     1
(1 row)

\dx hstore
     List of installed extensions
 Name | Version | Schema | Description 
------+---------+--------+-------------
(0 rows)

\dO collation_french
                     List of collations
 Schema | Name | Collate | Ctype | Provider | Deterministic? 
--------+------+---------+-------+----------+----------------
(0 rows)

\dT type_mood
        List of data types
 Schema |   Name    | Description 
--------+-----------+-------------
 public | type_mood | 
(1 row)

\dL plperlabc
          List of languages
 Name | Owner | Trusted | Description 
------+-------+---------+-------------
(0 rows)

select trffromsql, trftosql from pg_transform order by trffromsql, trftosql;
psql:resources/all_types_objects.check.sql:16: ERROR:  relation "pg_transform" does not exist
LINE 1: select trffromsql, trftosql from pg_transform order by trffr...
                                         ^
\dF testconfiguration
    List of text search configurations
 Schema |       Name        | Description 
--------+-------------------+-------------
 public | testconfiguration | 
(1 row)

\dFd testdictionary
   List of text search dictionaries
 Schema |      Name      | Description 
--------+----------------+-------------
 public | testdictionary | 
(1 row)

\dFp testparser
    List of text search parsers
 Schema |    Name    | Description 
--------+------------+-------------
 public | testparser | 
(1 row)

\dFt testtemplate
    List of text search templates
 Schema |     Name     | Description 
--------+--------------+-------------
 public | testtemplate | 
(1 row)

\dAc gist integer;
                   List of operator classes
  AM  | Input type | Storage type | Operator class | Default? 
------+------------+--------------+----------------+----------
 gist | integer    |              | testclass      | no
(1 row)

\dAf gist integer
         List of operator families
  AM  | Operator family | Applicable types 
------+-----------------+------------------
 gist | testclass       | integer
(1 row)

\dAo gist testclass
              List of operators of operator families
  AM  | Operator family |      Operator      | Strategy | Purpose 
------+-----------------+--------------------+----------+---------
 gist | testclass       | =(integer,integer) |        1 | search
 gist | testclass       | <(integer,integer) |        2 | search
(2 rows)

\dAp gist testclass
                      List of support functions of operator families
  AM  | Operator family | Registered left type | Registered right type | Number | Function 
------+-----------------+----------------------+-----------------------+--------+----------
 gist | testclass       | integer              | integer               |      1 | abs
 gist | testclass       | integer              | integer               |      2 | int4out
(2 rows)

select count(*) from pg_opfamily where opfname='testfam';
 count 
-------
     1
(1 row)

\da agg_twocols;
                         List of aggregate functions
 Schema |    Name     | Result data type | Argument data types | Description 
--------+-------------+------------------+---------------------+-------------
 public | agg_twocols | numeric          | numeric, numeric    | 
(1 row)

select count(*) from pg_cast where castsource=(select oid from pg_type where typname='text') and casttarget=(select oid from pg_type where typname='int4');
 count 
-------
     0
(1 row)

--\dA test_access_method
select count(*) from pg_am where amname='test_access_method';
 count 
-------
     0
(1 row)

\dv v_vista
         List of relations
 Schema |  Name   | Type |  Owner  
--------+---------+------+---------
 public | v_vista | view | gpadmin
(1 row)

\dm v_comedies
psql:resources/all_types_objects.check.sql:31: error: Did not find any relation named "v_comedies".
\ds myseq
          List of relations
 Schema | Name  |   Type   |  Owner  
--------+-------+----------+---------
 public | myseq | sequence | gpadmin
(1 row)

--\dS tbl_with_constraint
select count(*) from tbl_with_constraint;
 count 
-------
     0
(1 row)

\dD us_postal_code_domain
                                                              List of domains
 Schema |         Name          | Type | Collation | Nullable | Default |                              Check                               
--------+-----------------------+------+-----------+----------+---------+------------------------------------------------------------------
 public | us_postal_code_domain | text |           |          |         | CHECK (VALUE ~ '^\d{5}$'::text OR VALUE ~ '^\d{5}-\d{4}$'::text)
(1 row)

\dc testconv
                  List of conversions
 Schema |   Name   | Source |  Destination  | Default? 
--------+----------+--------+---------------+----------
 public | testconv | LATIN1 | MULE_INTERNAL | no
(1 row)

--\dS books
select count(*) from books;
 count 
-------
     0
(1 row)

select count(*) from pg_rules where rulename='rule_abc';
 count 
-------
     1
(1 row)

select count(*) from pg_trigger where tgname='testtable_trigger';
 count 
-------
     0
(1 row)

\dy postdata_eventtrigger
              List of event triggers
 Name | Event | Owner | Enabled | Function | Tags 
------+-------+-------+---------+----------+------
(0 rows)

\dg jonathan
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------
 jonathan  |            | {}

\dg group1
            List of roles
 Role name |  Attributes  | Member of 
-----------+--------------+-----------
 group1    | Cannot login | {}

\dg user1
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------
 user1     |            | {}

select count(*) from pg_policy where polname='account_policy';
psql:resources/all_types_objects.check.sql:45: ERROR:  relation "pg_policy" does not exist
LINE 1: select count(*) from pg_policy where polname='account_policy...
                             ^
select count(*) from pg_resgroup where rsgname='rgroup1';
 count 
-------
     1
(1 row)

select count(*) from pg_resqueue where rsqname='myqueue';
 count 
-------
     1
(1 row)

--\dX s1
select count(*) from pg_statistic_ext where stxname='s1';
psql:resources/all_types_objects.check.sql:49: ERROR:  relation "pg_statistic_ext" does not exist
LINE 1: select count(*) from pg_statistic_ext where stxname='s1';
                             ^
